#!/bin/sh
#
#++
# = SECRETS(1)
# :man manual: msys operations manual
# :Revision: 1.0
# :Author: A Liu Ly
#
# == NAME
#
# secrets - upload secrets
#
# == SYNOPSIS
#
# *msecrets* _[--secrets=file] [--admkeys=keys]_ [-t|--test]_ _system_
#
# == DESCRIPTION
#
# This script uploads secret files to target systems.  It is
# done outside the normal *msys* config process in order to avoid
# logging the payload.  By default *msys* will log configuration scripts.
#
# == OPTIONS
#
# *--secrets=* file::
#    Secrets configuration file.  Defaults to `/etc/secrets.cfg`.
# *--admkeys=* keys::
#    Admin ssh keys.  Defaults to `/etc/msys.keys`.
# *-t|--test*
#    Test mode.
#
# == ENVIRONMENT
#
# *SECRETS_CFG*:: Path to secrets config file.
# *ADM_KEYS*:: Path to admin keys file.
#
# == SEE ALSO
#
# msys(8)
#
#--
script_dir=$(cd $(dirname $0) && pwd)
export MSYS_HOME=$(cd $(dirname $0)/.. && pwd)
export PATH=$PATH:$script_dir

[ -z "$SECRETS_CFG" ] && SECRETS_CFG=/etc/secrets.cfg
[ -z "$ADM_KEYS" ] && ADM_KEYS=/etc/msys.keys

test=no

while [ $# -gt 0 ] ; do
  case "$1" in
    -t|--test)
      test=yes
      shift
      ;;
    --secrets=*)
      SECRET_CFG=${1#--secrets=}
      shift
      ;;
    --admkeys=*)
      ADM_KEYS=${1#--admkeys=}
      shift
      ;;
    *)
      break
      ;;
  esac
done

if [ $test = yes ] ; then
  exec $script_dir/msys \
    "-DMSYS_SECRETS_CFG='$SECRETS_CFG'" \
    "-DMSYS_ADMIN_KEYS='$ADM_KEYS'" \
    -t secrets
else
  rv=0
  for ip in "$@"
  do
    $script_dir/msys \
      --no-archive \
      "-DMSYS_SECRETS_CFG='$SECRETS_CFG'" \
      "-DMSYS_ADMIN_KEYS='$ADM_KEYS'" \
      --ssh="$ip" secrets
    rv=$(expr $rv + $?)
  done
  exit $rv
fi
